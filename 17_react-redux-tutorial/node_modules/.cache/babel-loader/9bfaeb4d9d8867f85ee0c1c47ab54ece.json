{"ast":null,"code":"const CHANGE_INPUT = \"todos/CHANGE_INPUT\";\nconst INSERT = \"todos/INSERT\";\nconst TOGGLE = \"todos/TOGGLE\";\nconst REMOVE = \"todos/REMOVE\";\nexport const changeInput = input => ({\n  type: CHANGE_INPUT,\n  input\n});\nlet id = 3;\nexport const insert = text => ({\n  type: INSERT,\n  todo: {\n    id: id++,\n    text,\n    done: false\n  }\n});\nexport const toggle = id => ({\n  type: TOGGLE,\n  id\n});\nexport const remove = id => ({\n  type: REMOVE,\n  id\n});\nconst initialState = {\n  input: \"\",\n  todos: [{\n    id: 1,\n    text: \"리덕스 기초 배우기\",\n    done: true\n  }, {\n    id: 2,\n    text: \"리액트 리덕스 사용하기\",\n    done: false\n  }]\n};\n\nfunction todos(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_INPUT:\n      return { ...state,\n        input: action.input\n      };\n\n    case INSERT:\n      return { ...state,\n        todos: state.todos.concat(action.todo)\n      };\n\n    case TOGGLE:\n      return { ...state,\n        todos: state.todos.map(todo => todo.id === action.id ? { ...state,\n          done: !todo.done\n        } : todo)\n      };\n\n    case REMOVE:\n      return { ...state,\n        todos: state.todos.filter(todo => todo.id !== action.id)\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default todos;","map":{"version":3,"sources":["C:/Users/bit/Desktop/react/1_react_gil/react-redux-tutorial/src/modules/todos.js"],"names":["CHANGE_INPUT","INSERT","TOGGLE","REMOVE","changeInput","input","type","id","insert","text","todo","done","toggle","remove","initialState","todos","state","action","concat","map","filter"],"mappings":"AAAA,MAAMA,YAAY,GAAG,oBAArB;AACA,MAAMC,MAAM,GAAG,cAAf;AACA,MAAMC,MAAM,GAAG,cAAf;AACA,MAAMC,MAAM,GAAG,cAAf;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAEN,YAD+B;AAErCK,EAAAA;AAFqC,CAAZ,CAApB;AAKP,IAAIE,EAAE,GAAG,CAAT;AACA,OAAO,MAAMC,MAAM,GAAIC,IAAD,KAAW;AAC/BH,EAAAA,IAAI,EAAEL,MADyB;AAE/BS,EAAAA,IAAI,EAAE;AACJH,IAAAA,EAAE,EAAEA,EAAE,EADF;AAEJE,IAAAA,IAFI;AAGJE,IAAAA,IAAI,EAAE;AAHF;AAFyB,CAAX,CAAf;AASP,OAAO,MAAMC,MAAM,GAAIL,EAAD,KAAS;AAC7BD,EAAAA,IAAI,EAAEJ,MADuB;AAE7BK,EAAAA;AAF6B,CAAT,CAAf;AAKP,OAAO,MAAMM,MAAM,GAAIN,EAAD,KAAS;AAC7BD,EAAAA,IAAI,EAAEH,MADuB;AAE7BI,EAAAA;AAF6B,CAAT,CAAf;AAKP,MAAMO,YAAY,GAAG;AACnBT,EAAAA,KAAK,EAAE,EADY;AAEnBU,EAAAA,KAAK,EAAE,CACL;AACER,IAAAA,EAAE,EAAE,CADN;AAEEE,IAAAA,IAAI,EAAE,YAFR;AAGEE,IAAAA,IAAI,EAAE;AAHR,GADK,EAML;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEE,IAAAA,IAAI,EAAE,cAFR;AAGEE,IAAAA,IAAI,EAAE;AAHR,GANK;AAFY,CAArB;;AAgBA,SAASI,KAAT,CAAeC,KAAK,GAAGF,YAAvB,EAAqCG,MAArC,EAA6C;AAC3C,UAAQA,MAAM,CAACX,IAAf;AACE,SAAKN,YAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELX,QAAAA,KAAK,EAAEY,MAAM,CAACZ;AAFT,OAAP;;AAIF,SAAKJ,MAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELD,QAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYG,MAAZ,CAAmBD,MAAM,CAACP,IAA1B;AAFF,OAAP;;AAIF,SAAKR,MAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELD,QAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYI,GAAZ,CAAiBT,IAAD,IACrBA,IAAI,CAACH,EAAL,KAAYU,MAAM,CAACV,EAAnB,GAAwB,EAAE,GAAGS,KAAL;AAAYL,UAAAA,IAAI,EAAE,CAACD,IAAI,CAACC;AAAxB,SAAxB,GAAyDD,IADpD;AAFF,OAAP;;AAMF,SAAKP,MAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELD,QAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYK,MAAZ,CAAoBV,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYU,MAAM,CAACV,EAAhD;AAFF,OAAP;;AAIF;AACE,aAAOS,KAAP;AAxBJ;AA0BD;;AAED,eAAeD,KAAf","sourcesContent":["const CHANGE_INPUT = \"todos/CHANGE_INPUT\";\nconst INSERT = \"todos/INSERT\";\nconst TOGGLE = \"todos/TOGGLE\";\nconst REMOVE = \"todos/REMOVE\";\n\nexport const changeInput = (input) => ({\n  type: CHANGE_INPUT,\n  input,\n});\n\nlet id = 3;\nexport const insert = (text) => ({\n  type: INSERT,\n  todo: {\n    id: id++,\n    text,\n    done: false,\n  },\n});\n\nexport const toggle = (id) => ({\n  type: TOGGLE,\n  id,\n});\n\nexport const remove = (id) => ({\n  type: REMOVE,\n  id,\n});\n\nconst initialState = {\n  input: \"\",\n  todos: [\n    {\n      id: 1,\n      text: \"리덕스 기초 배우기\",\n      done: true,\n    },\n    {\n      id: 2,\n      text: \"리액트 리덕스 사용하기\",\n      done: false,\n    },\n  ],\n};\n\nfunction todos(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_INPUT:\n      return {\n        ...state,\n        input: action.input,\n      };\n    case INSERT:\n      return {\n        ...state,\n        todos: state.todos.concat(action.todo),\n      };\n    case TOGGLE:\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.id === action.id ? { ...state, done: !todo.done } : todo\n        ),\n      };\n    case REMOVE:\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== action.id),\n      };\n    default:\n      return state;\n  }\n}\n\nexport default todos;\n"]},"metadata":{},"sourceType":"module"}