{"ast":null,"code":"import { createAction, handleActions } from \"redux-actions\";\nconst INCREASE = \"counter/INCREASE\";\nconst DECREASE = \"counter/DECREASE\"; // export const increase = () => ({ type: INCREASE });\n// export const decrease = () => ({ type: DECREASE });\n\nexport const increase = createAction(INCREASE);\nexport const decrease = createAction(DECREASE);\nconst initialState = {\n  number: 0\n};\nconst counter = handleActions({\n  [INCREASE]: (state, action) => ({\n    number: state.number + 1\n  }),\n  [DECREASE]: (state, action) => ({\n    number: state.number - 1\n  })\n}, initialState, console.log(initialState)); // function counter(state = initialState, action) {\n//   switch (action.type) {\n//     case INCREASE:\n//       return {\n//         number: state.number + 1,\n//       };\n//     case DECREASE:\n//       return {\n//         number: state.number - 1,\n//       };\n//     default:\n//       return state;\n//   }\n// }\n\nexport default counter;","map":{"version":3,"sources":["C:/Users/bit/Desktop/react/1_react_gil/react-redux-tutorial/src/modules/counter.js"],"names":["createAction","handleActions","INCREASE","DECREASE","increase","decrease","initialState","number","counter","state","action","console","log"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AAEA,MAAMC,QAAQ,GAAG,kBAAjB;AACA,MAAMC,QAAQ,GAAG,kBAAjB,C,CAEA;AACA;;AAEA,OAAO,MAAMC,QAAQ,GAAGJ,YAAY,CAACE,QAAD,CAA7B;AACP,OAAO,MAAMG,QAAQ,GAAGL,YAAY,CAACG,QAAD,CAA7B;AAEP,MAAMG,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AADW,CAArB;AAIA,MAAMC,OAAO,GAAGP,aAAa,CAC3B;AACE,GAACC,QAAD,GAAY,CAACO,KAAD,EAAQC,MAAR,MAAoB;AAAEH,IAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,GAAe;AAAzB,GAApB,CADd;AAEE,GAACJ,QAAD,GAAY,CAACM,KAAD,EAAQC,MAAR,MAAoB;AAAEH,IAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,GAAe;AAAzB,GAApB;AAFd,CAD2B,EAK3BD,YAL2B,EAM3BK,OAAO,CAACC,GAAR,CAAYN,YAAZ,CAN2B,CAA7B,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeE,OAAf","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\n\nconst INCREASE = \"counter/INCREASE\";\nconst DECREASE = \"counter/DECREASE\";\n\n// export const increase = () => ({ type: INCREASE });\n// export const decrease = () => ({ type: DECREASE });\n\nexport const increase = createAction(INCREASE);\nexport const decrease = createAction(DECREASE);\n\nconst initialState = {\n  number: 0,\n};\n\nconst counter = handleActions(\n  {\n    [INCREASE]: (state, action) => ({ number: state.number + 1 }),\n    [DECREASE]: (state, action) => ({ number: state.number - 1 }),\n  },\n  initialState,\n  console.log(initialState)\n);\n\n// function counter(state = initialState, action) {\n//   switch (action.type) {\n//     case INCREASE:\n//       return {\n//         number: state.number + 1,\n//       };\n//     case DECREASE:\n//       return {\n//         number: state.number - 1,\n//       };\n//     default:\n//       return state;\n//   }\n// }\n\nexport default counter;\n"]},"metadata":{},"sourceType":"module"}